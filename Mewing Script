local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Mewing Simulator",
   Icon = 0,
   LoadingTitle = "Mog Hub",
   LoadingSubtitle = "by B1RD",
   Theme = "Default",

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false,

   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil,
      FileName = "Speed Hub"
   },

   Discord = {
      Enabled = false,
      Invite = "noinvitelink",
      RememberJoins = true
   },

   KeySystem = false,
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided",
      FileName = "Key",
      SaveKey = true,
      GrabKeyFromSite = false,
      Key = {"Hello"}
   }
})

local MainTab = Window:CreateTab("Auto Farm", nil)
local MainSection = MainTab:CreateSection("Auto Farm")


local Toggle = MainTab:CreateToggle({
   Name = "Auto Mew",
   CurrentValue = false,
   Flag = "MewToggle", 
   Callback = function(activateMew)
      if activateMew then
         task.spawn(function()
            while activateMew do
               game:GetService("ReplicatedStorage").Packages.Knit.Services.ToolService.RE.MewRequest:FireServer()
               task.wait(0.1) -- Adjust delay as needed
            end
         end)
      end
   end,
})

local ToggleRoller = MainTab:CreateToggle({
   Name = "Auto Roller",
   CurrentValue = false,
   Flag = "RollerToggle", 
   Callback = function(activateRoller)
      if activateRoller then
         local args = {
            [1] = 1,
            [2] = "Roller",
            [3] = "Pro Roller"
         }
         game:GetService("ReplicatedStorage").Packages.Knit.Services.ToolService.RE.onGuiEquipRequest:FireServer(unpack(args))
         
         task.spawn(function()
            while activateRoller do
               game:GetService("ReplicatedStorage").Packages.Knit.Services.ToolService.RE.onClick:FireServer()
               task.wait(0.1) -- Adjust delay as needed
            end
         end)
      end
   end,
})


local isFoodActive = false
local isToothbrushActive = false

local FoodToggle = MainTab:CreateToggle({
   Name = "Auto Food",
   CurrentValue = false,
   Flag = "FoodToggle", 
   Callback = function(state)
      isFoodActive = state
      if isFoodActive then
         local args = {
            [1] = 1,
            [2] = "Food",
            [3] = "Golden Burger"
         }
         game:GetService("ReplicatedStorage").Packages.Knit.Services.ToolService.RE.onGuiEquipRequest:FireServer(unpack(args))

         task.spawn(function()
            while isFoodActive do
               game:GetService("ReplicatedStorage").Packages.Knit.Services.ToolService.RE.onClick:FireServer()
               task.wait(0.1)
            end
         end)
      end
   end,
})

local ToothbrushToggle = MainTab:CreateToggle({
   Name = "Auto Toothbrush",
   CurrentValue = false,
   Flag = "ToothbrushToggle", 
   Callback = function(state)
      isToothbrushActive = state
      if isToothbrushActive then
         local args = {
            [1] = 1,
            [2] = "Toothbrush",
            [3] = "Blue Toothbrush"
         }
         game:GetService("ReplicatedStorage").Packages.Knit.Services.ToolService.RE.onGuiEquipRequest:FireServer(unpack(args))

         task.spawn(function()
            while isToothbrushActive do
               game:GetService("ReplicatedStorage").Packages.Knit.Services.ToolService.RE.onClick:FireServer()
               task.wait(0.1)
            end
         end)
      end
   end,
})
