local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Mewing Simulator",
   Icon = 0,
   LoadingTitle = "Mog Hub",
   LoadingSubtitle = "by B1RD",
   Theme = "Default",

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false,

   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil,
      FileName = "Speed Hub"
   },

   Discord = {
      Enabled = false,
      Invite = "noinvitelink",
      RememberJoins = true
   },

   KeySystem = false,
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided",
      FileName = "Key",
      SaveKey = true,
      GrabKeyFromSite = false,
      Key = {"Hello"}
   }
})

local MainTab = Window:CreateTab("Auto Farm", nil)
local MainSection = MainTab:CreateSection("Auto Farm")

local isMewActive = false
local isRollerActive = false
local isFoodActive = false
local isToothbrushActive = false
local isSkinCareActive = false

local MewToggle = MainTab:CreateToggle({
   Name = "Autofarm Mew",
   CurrentValue = false,
   Flag = "MewToggle", 
   Callback = function(state)
      isMewActive = state
      if isMewActive then
         task.spawn(function()
            while isMewActive do
               game:GetService("ReplicatedStorage").Packages.Knit.Services.ToolService.RE.MewRequest:FireServer()
               task.wait(0.1)
            end
         end)
      end
   end,
})

local RollerToggle = MainTab:CreateToggle({
   Name = "Autofarm Roller",
   CurrentValue = false,
   Flag = "RollerToggle", 
   Callback = function(state)
      isRollerActive = state
      if isRollerActive then
         local args = {
            [1] = 1,
            [2] = "Roller",
            [3] = "Pro Roller"
         }
         game:GetService("ReplicatedStorage").Packages.Knit.Services.ToolService.RE.onGuiEquipRequest:FireServer(unpack(args))

         task.spawn(function()
            while isRollerActive do
               game:GetService("ReplicatedStorage").Packages.Knit.Services.ToolService.RE.onClick:FireServer()
               task.wait(0.1)
            end
         end)
      end
   end,
})


local FoodToggle = MainTab:CreateToggle({
   Name = "Autofarm Food",
   CurrentValue = false,
   Flag = "FoodToggle", 
   Callback = function(state)
      isFoodActive = state
      if isFoodActive then
         local args = {
            [1] = 1,
            [2] = "Food",
            [3] = "Golden Burger"
         }
         game:GetService("ReplicatedStorage").Packages.Knit.Services.ToolService.RE.onGuiEquipRequest:FireServer(unpack(args))

         task.spawn(function()
            while isFoodActive do
               game:GetService("ReplicatedStorage").Packages.Knit.Services.ToolService.RE.onClick:FireServer()
               task.wait(0.1)
            end
         end)
      end
   end,
})

local ToothbrushToggle = MainTab:CreateToggle({
   Name = "Autofarm Toothbrush",
   CurrentValue = false,
   Flag = "ToothbrushToggle", 
   Callback = function(state)
      isToothbrushActive = state
      if isToothbrushActive then
         local args = {
            [1] = 1,
            [2] = "Toothbrush",
            [3] = "Blue Toothbrush"
         }
         game:GetService("ReplicatedStorage").Packages.Knit.Services.ToolService.RE.onGuiEquipRequest:FireServer(unpack(args))

         task.spawn(function()
            while isToothbrushActive do
               game:GetService("ReplicatedStorage").Packages.Knit.Services.ToolService.RE.onClick:FireServer()
               task.wait(0.1)
            end
         end)
      end
   end,
})

local SkinCareToggle = MainTab:CreateToggle({
   Name = "Autofarm Skin Care",
   CurrentValue = false,
   Flag = "SkinCareToggle", 
   Callback = function(state)
      isSkinCareActive = state
      if isSkinCareActive then
         local args = {
            [1] = 1,
            [2] = "Skincare",
            [3] = "Good Sunscreen"
         }
         game:GetService("ReplicatedStorage").Packages.Knit.Services.ToolService.RE.onGuiEquipRequest:FireServer(unpack(args))

         task.spawn(function()
            while isSkinCareActive do
               game:GetService("ReplicatedStorage").Packages.Knit.Services.ToolService.RE.onClick:FireServer()
               task.wait(0.1)
            end
         end)
      end
   end,
})

local MainSection = MainTab:CreateSection("Auto Bosses")

local isEdgarActive = false
local isDJBestActive = false
local isTopGuyActive = false
local isMoaiActive = false
local isGigaSigmaActive = false

local EdgarToggle = MainTab:CreateToggle({
   Name = "Go to Edgar & Infinite Click",
   CurrentValue = false,
   Flag = "EdgarToggle", 
   Callback = function(state)
      isEdgarActive = state
      if isEdgarActive then
         local args = {
            [1] = "Edgar",
            [2] = workspace.Zones:FindFirstChild("1").Interactables.Mogging.NPC.Edgar.Table,
            [3] = "1"
         }
         game:GetService("ReplicatedStorage").Packages.Knit.Services.MoggingService.RE.onEnterNPCTable:FireServer(unpack(args))

         task.spawn(function()
            while isEdgarActive do
               game:GetService("ReplicatedStorage").Packages.Knit.Services.MoggingService.RE.onClickRequest:FireServer()
               task.wait(0.1)
            end
         end)

         task.delay(8, function()
            if isEdgarActive then
               isEdgarActive = false
               EdgarToggle:SetValue(false)
               task.wait(1)
               EdgarToggle:SetValue(true)
            end
         end)
      else
         isEdgarActive = false
      end
   end,
})

local DJBestToggle = MainTab:CreateToggle({
   Name = "Go to DJ Best & Infinite Click",
   CurrentValue = false,
   Flag = "DJBestToggle", 
   Callback = function(state)
      isDJBestActive = state
      if isDJBestActive then
         local args = {
            [1] = "DJBest",
            [2] = workspace.Zones:FindFirstChild("1").Interactables.Mogging.NPC.DJBest.Table,
            [3] = "1"
         }
         game:GetService("ReplicatedStorage").Packages.Knit.Services.MoggingService.RE.onEnterNPCTable:FireServer(unpack(args))

         task.spawn(function()
            while isDJBestActive do
               game:GetService("ReplicatedStorage").Packages.Knit.Services.MoggingService.RE.onClickRequest:FireServer()
               task.wait(0.1)
            end
         end)

         task.delay(8, function()
            if isDJBestActive then
               isDJBestActive = false
               DJBestToggle:SetValue(false)
               task.wait(1)
               DJBestToggle:SetValue(true)
            end
         end)
      else
         isDJBestActive = false
      end
   end,
})

local TopGuyToggle = MainTab:CreateToggle({
   Name = "Go to Top Guy & Infinite Click",
   CurrentValue = false,
   Flag = "TopGuyToggle", 
   Callback = function(state)
      isTopGuyActive = state
      if isTopGuyActive then
         local args = {
            [1] = "TopGuy",
            [2] = workspace.Zones:FindFirstChild("1").Interactables.Mogging.NPC.TopGuy.Table,
            [3] = "1"
         }
         game:GetService("ReplicatedStorage").Packages.Knit.Services.MoggingService.RE.onEnterNPCTable:FireServer(unpack(args))

         task.spawn(function()
            while isTopGuyActive do
               game:GetService("ReplicatedStorage").Packages.Knit.Services.MoggingService.RE.onClickRequest:FireServer()
               task.wait(0.1)
            end
         end)

         task.delay(8, function()
            if isTopGuyActive then
               isTopGuyActive = false
               TopGuyToggle:SetValue(false)
               task.wait(1)
               TopGuyToggle:SetValue(true)
            end
         end)
      else
         isTopGuyActive = false
      end
   end,
})

local MoaiToggle = MainTab:CreateToggle({
   Name = "Go to Moai & Infinite Click",
   CurrentValue = false,
   Flag = "MoaiToggle", 
   Callback = function(state)
      isMoaiActive = state
      if isMoaiActive then
         local args = {
            [1] = "Moai",
            [2] = workspace.Zones:FindFirstChild("1").Interactables.Mogging.NPC.Moai.Table,
            [3] = "1"
         }
         game:GetService("ReplicatedStorage").Packages.Knit.Services.MoggingService.RE.onEnterNPCTable:FireServer(unpack(args))

         task.spawn(function()
            while isMoaiActive do
               game:GetService("ReplicatedStorage").Packages.Knit.Services.MoggingService.RE.onClickRequest:FireServer()
               task.wait(0.1)
            end
         end)

         task.delay(8, function()
            if isMoaiActive then
               isMoaiActive = false
               MoaiToggle:SetValue(false)
               task.wait(1)
               MoaiToggle:SetValue(true)
            end
         end)
      else
         isMoaiActive = false
      end
   end,
})

local GigaSigmaToggle = MainTab:CreateToggle({
   Name = "Go to Giga Sigma & Infinite Click",
   CurrentValue = false,
   Flag = "GigaSigmaToggle", 
   Callback = function(state)
      isGigaSigmaActive = state
      if isGigaSigmaActive then
         local args = {
            [1] = "GigaSigma",
            [2] = workspace.Zones:FindFirstChild("1").Interactables.Mogging.NPC.GigaSigma.Table,
            [3] = "1"
         }
         game:GetService("ReplicatedStorage").Packages.Knit.Services.MoggingService.RE.onEnterNPCTable:FireServer(unpack(args))

         task.spawn(function()
            while isGigaSigmaActive do
               game:GetService("ReplicatedStorage").Packages.Knit.Services.MoggingService.RE.onClickRequest:FireServer()
               task.wait(0.1)
            end
         end)

         task.delay(8, function()
            if isGigaSigmaActive then
               isGigaSigmaActive = false
               GigaSigmaToggle:SetValue(false)
               task.wait(1)
               GigaSigmaToggle:SetValue(true)
            end
         end)
      else
         isGigaSigmaActive = false
      end
   end,
})

